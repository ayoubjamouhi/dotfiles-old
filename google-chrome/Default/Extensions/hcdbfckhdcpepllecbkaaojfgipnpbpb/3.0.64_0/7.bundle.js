(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{256:function(e,t,s){var i=s(264);"string"==typeof i&&(i=[[e.i,i,""]]);var n={insert:"head",singleton:!1};s(9)(i,n);i.locals&&(e.exports=i.locals)},263:function(e,t,s){"use strict";var i=s(256);s.n(i).a},264:function(e,t,s){(e.exports=s(1)(!1)).push([e.i,"\n.col-6[data-v-e3b236aa] {\r\n  padding-top: 0px;\r\n  padding-bottom: 0px;\n}\r\n",""])},273:function(e,t,s){"use strict";s.r(t);var i=s(6),n=s(259),a=s(8),o=s(65),r={components:{UserList:n.a},props:{p2:Boolean,up:{type:Number,default:1e3},up2:{type:Number,default:0},loading:Boolean,processResponse:{type:Function,default:()=>{alert("No process response function")}},isFrontComponent:Boolean,username:{type:String,default:""},email:String,plan:String},data:()=>({valid:!0,limit:0,validityDays:30,relType:"All"}),computed:{isDb:()=>!0,label(){return`Data last updated ${this.validityDays} days ago`}},methods:{check:e=>0===e||!!e||"Input is required",checkMin:e=>e>=0||"must be greater than or equal to 0",checkMax:e=>e<=1e3||"must be less than or equal to 1000",checkInt:e=>Number.isInteger(e)||"must be integer",processResponseWrapper(e){this.processResponse(e),this.running=!1},async resumeScanClick(e){if(this.running)return;this.running=!0;const t=await o.a.FindResume(this.email,this.username);console.log("FindResume result",t);const{run_id:s,scanning_scope:n,fs:r,count:l}=t;if(console.log({run_id:s,count:l,scanning_scope:n}),l||s)if(this.p2)if(s){console.log("run_id exists in FindResume response, first part");const e=await(new i.a).promiseQuery({active:!0,currentWindow:!0});chrome.tabs.sendMessage(e[0].id,{action:"get_insta_users_db2",page:"instaUsers.html",userName:this.username,limit:this.limit,validityDays:this.validityDays,relType:n,p2:this.p2,up:this.up,up2:this.up2,email:this.email,plan_name:this.plan,extId:chrome.runtime.id,extVer:chrome.runtime.getManifest().version,run_id:s,fs:r},this.processResponseWrapper)}else l&&(console.log("count exists in FindResume response, second part"),this.running=!1,this.instaUsersClick(e));else window.confirm(a.a.getMessage("PREMIUM"))&&this.openStripeCheckout();else alert(a.a.getMessage("USE_GET_LIST_OF_USERS"))},async instaUsersClick(e){if(this.running)return;this.running=!0;const t=await(new i.a).promiseQuery({active:!0,currentWindow:!0});chrome.tabs.sendMessage(t[0].id,{action:e,page:"instaUsers.html",userName:this.username,limit:this.limit,validityDays:this.validityDays,relType:this.relType,p2:this.p2,up:this.up,up2:this.up2,email:this.email,plan_name:this.plan,extId:chrome.runtime.id,extVer:chrome.runtime.getManifest().version},this.processResponseWrapper)}}},l=(s(263),s(5)),u=Object(l.a)(r,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("v-hover",{scopedSlots:e._u([{key:"default",fn:function(t){var i=t.hover;return s("v-col",{staticClass:"pa-2",class:"elevation-"+(i?12:2),attrs:{cols:"4"}},[s("v-form",{model:{value:e.valid,callback:function(t){e.valid=t},expression:"valid"}},[s("v-text-field",{attrs:{value:e.username,label:"Username"},on:{change:function(t){return e.username=t}}}),e._v(" "),s("v-radio-group",{attrs:{"hide-details":""},model:{value:e.relType,callback:function(t){e.relType=t},expression:"relType"}},[s("v-radio",{key:1,attrs:{label:"Following+Followers",value:"All"}}),e._v(" "),s("v-radio",{key:2,attrs:{label:"Only Following",value:"follows"}}),e._v(" "),s("v-radio",{key:3,attrs:{label:"Only Followers",value:"followed_by"}})],1),e._v(" "),s("v-tooltip",{attrs:{top:""},scopedSlots:e._u([{key:"activator",fn:function(t){var i=t.on;return[s("v-text-field",e._g({attrs:{type:"number",label:"Limit the amount of followers/following",rules:[e.check,e.checkInt,e.checkMin],min:"0",step:"1"},model:{value:e.limit,callback:function(t){e.limit=e._n(t)},expression:"limit"}},i))]}}],null,!0)},[e._v(" "),s("span",[e._v('Limits the amount of followers/following (effective when the "GET LIST OF USERS!" button is clicked)')])]),e._v(" "),s("v-tooltip",{attrs:{top:""},scopedSlots:e._u([{key:"activator",fn:function(t){var i=t.on;return[e.isDb?s("v-text-field",e._g({attrs:{type:"number",label:e.label,rules:[e.check,e.checkInt,e.checkMin,e.checkMax],min:"0",step:"1"},model:{value:e.validityDays,callback:function(t){e.validityDays=e._n(t)},expression:"validityDays"}},i)):e._e()]}}],null,!0)},[e._v(" "),s("span",[e._v("Get data faster by choosing a maximum amount of days when it was last updated")])]),e._v(" "),s("v-tooltip",{attrs:{top:""},scopedSlots:e._u([{key:"activator",fn:function(t){var i=t.on;return[s("v-btn",e._g({attrs:{block:"",disabled:!e.username||e.loading||!e.valid,color:"primary"},on:{click:function(t){return e.instaUsersClick("get_insta_users")}}},i),[e._v("\n            Get List Of\n            Users!\n          ")])]}}],null,!0)},[e._v(" "),s("span",[e._v("Gets a list of following/followers (if data is older than "+e._s(e.validityDays)+" days the analysis will be performed again)")])]),e._v(" "),e.isDb?s("v-tooltip",{attrs:{top:""},scopedSlots:e._u([{key:"activator",fn:function(t){var i=t.on;return[e.isDb?s("v-btn",e._g({attrs:{block:"",disabled:!e.username||e.loading,color:"orange"},on:{click:function(t){return e.resumeScanClick("get_insta_users_db")}}},i),[e._v("\n            Resume scan!\n          ")]):e._e()]}}],null,!0)},[e._v(" "),s("span",[e._v("Resumes process “GET LIST OF USERS!” leveraging past analyses that have been recently performed combining missing info from the web")])]):e._e(),e._v(" "),e.isFrontComponent?e._e():s("user-list",{attrs:{username:e.username}})],1)],1)}}])})}),[],!1,null,"e3b236aa",null);t.default=u.exports},65:function(e,t,s){"use strict";var i=s(7),n=s.n(i),a=s(10),o=s(12),r=s(8),l=s(2);const u="https://db.instagramhelpertools.com",c="8001",p={auth:{username:"restuser",password:"testpassword12"}};t.a=class{CreateDb(e){return this.updateStatusDiv=e.updateStatusDiv,this.user_id=e.user_id,this.followed_by=e.followed_by,this.follows=e.follows,this.scanning_scope=e.scanning_scope,this.username=e.username,this.email=e.email,this.viewer_user_id=e.viewer_user_id,this.noexport=e.noexport,this.forcedLimit=e.forcedLimit,this.limit=e.limit,this}retryError(e,t,s,i,n){this.updateStatusDiv(e,"pink"),a.a.setTimeout(3e3).then(()=>o.a.doCountdown({element:"status",errorNumber:t,prefix:"DB",stopTime:+(new Date).getTime()+l.a.retryInterval,color:"pink"})).then(()=>{console.log("Continue execution after HTTP error",t,new Date),s.call(this,i,n)})}analyzeError(e,t,s,i){console.log(e);const n=e.response?e.response.status:0;if(n>0&&console.log(`error response data - ${e.response.data}/${n}`),console.log(`Error making http request to backend, status - ${n}`),Object.prototype.hasOwnProperty.call(l.a.httpErrorMap,n)){console.log(`HTTP${n} error trying to get your feed.`,new Date);const e=r.a.getMessage(l.a.httpErrorMap[n],n,+l.a.retryInterval/6e4);this.retryError(e,n,t,s,i)}else alert(r.a.getMessage("ERRFETCHINGUSER",n)),i()}postRelationshipsInternal(e,t){const s=`${u}:${c}/api/relationships3/`;n.a.post(s,{user_id:this.user_id,run_id:this.run_id,followers:this.followers,following:this.following,end_cursor:this.end_cursor,fs:this.fs},p).then(()=>e(),s=>this.analyzeError(s,this.postRelationshipsInternal,e,t))}postRelationships(e,t,s,i){return this.followers=e,this.following=t,this.end_cursor=s,this.fs=i,new Promise((e,t)=>{this.postRelationshipsInternal(e,t)})}postRunInternal(e,t){const s=`${u}:${c}/api/run/`;n.a.post(s,{user_id:this.user_id,followed_by:this.followed_by,follows:this.follows,scanning_scope:this.scanning_scope,username:this.username,email:this.email,viewer_user_id:this.viewer_user_id,ext_id:chrome.runtime.id,ext_ver:chrome.runtime.getManifest().version,noexport:this.noexport,forced_limit:this.forcedLimit,limit:this.limit},p).then(t=>{this.run_id=t.data.insertId,e(this.run_id)},s=>this.analyzeError(s,this.postRunInternal,e,t))}postRun2(e){this.run_id=e}postRun(){return new Promise((e,t)=>{this.postRunInternal(e,t)})}postExport(e){return new Promise(t=>{const s=`${u}:${c}/api/export/`;n.a.post(s,e,p).then(e=>t(e.data.insertId),e=>{console.log(e),t(null)})})}async patchExport(e){const t=`${u}:${c}/api/export/${e}`;try{return await n.a.patch(t,{},p),null}catch(t){return console.log(t),this.updateStatusDiv(t.toString()),await a.a.setTimeout(1e3),this.updateStatusDiv("Trying patchExport again after 2 seconds ..."),await a.a.setTimeout(2e3),this.patchExport(e)}}patchRunInternal(e,t){if(!this.run_id)return void e();const s=`${u}:${c}/api/run/${this.run_id}`;n.a.patch(s,{status:this.status,validity_days:this.validity_days,found_valid_profiles:this.found_valid_profiles,created_list_length:this.created_list_length},p).then(()=>e(),s=>this.analyzeError(s,this.postRunInternal,e,t))}patchRun(e,t,s,i){return this.status=e,this.validity_days=t,this.found_valid_profiles=s,this.created_list_length=i,new Promise((e,t)=>{this.patchRunInternal(e,t)})}postUserInternal(e,t){const s=`${u}:${c}/api/user`;n.a.post(s,this.user,p).then(()=>e(),s=>this.analyzeError(s,this.postUserInternal,e,t))}postUser(e){return this.user=e,this.user.ext_id=chrome.runtime.id,this.user.ext_ver=chrome.runtime.getManifest().version,new Promise((e,t)=>{this.postUserInternal(e,t)})}static async FindResume(e,t){const s=`${u}:${c}/api/r32?email=${e}&username=${t}`;try{const e=await n.a.get(s,p);return console.log(e),e.data}catch(e){console.log(e),alert(e.toString())}return null}async getRelationships(e,t){console.log(`getRelationships relType - ${t}`);const s=`${u}:${c}/api/getUser?user_id=${e}&rel_type=${t}`;try{return(await n.a.get(s,p)).data}catch(s){return console.log("catch in getRelationships",(new Date).toTimeString()),console.log(s),this.updateStatusDiv(s.toString()),await a.a.setTimeout(1e3),this.updateStatusDiv("Trying getRelationships again after 2 seconds ..."),await a.a.setTimeout(2e3),this.getRelationships(e,t)}}async getDetailedInfo(e,t,s){const i=`${u}:${c}/api/getDetailedInfo`;try{return(await n.a.post(i,{users:e,days:t,isShort:s},p)).data}catch(s){return console.log(s),this.updateStatusDiv(s.toString()),await a.a.setTimeout(1e3),this.updateStatusDiv("Trying getDetailedInfo again after 2 seconds ..."),await a.a.setTimeout(2e3),this.getDetailedInfo(e,t)}}async getInfo(e,t){if(!t)return{missingUsers:e,foundUsers:[]};const s=[];for(;e.length;)s.push(e.splice(0,1e3));console.log(`The followers were splitted into ${s.length}squads of 1000users`),this.updateStatusDiv(`Need to get ${s.length}units of 1000users`);let i=[],n=[];for(let e=0;e<s.length;e++){const a=await this.getDetailedInfo(s[e],t);if(a.length<s[e].length){console.log(`Not all records found in DB - ${s[e].length}/${a.length}`);const t=a.map(e=>Number(e.id)),n=s[e].filter(e=>!t.includes(Number(e)));i=i.concat(n)}n=n.concat(a),this.updateStatusDiv(`Getting existing data - ${e} of ${s.length}`)}return this.updateStatusDiv("Retrieving existing data completed"),{missingUsers:i,foundUsers:n=n.map(e=>(e.public_email=e.public_email||null,e))}}async getShortInfo(e){const t=e.map(e=>e.id),s=[];for(;t.length;)s.push(t.splice(0,1e3));console.log(`The users were splitted into ${s.length}squads of 1000users`),this.updateStatusDiv(`Need to get ${s.length}units of 1000users`);let i=[];for(let e=0;e<s.length;e++){const t=await this.getDetailedInfo(s[e],0,!0);t.length<s[e].length&&console.log(`Not all short records found in DB - ${s[e].length}/${t.length}`),i=i.concat(t),this.updateStatusDiv(`Getting existing short data - ${e} of ${s.length}`)}this.updateStatusDiv("Retrieving existing short data completed"),console.log({foundUsers:i,myData:e}),console.log(`Lens foundUsers ${i.length}, myData ${e.length}`);const n=[];for(let t=0;t<e.length;t++)n.push({...e[t],...i.find(s=>s.id===e[t].id)});return console.log({result:n}),n}}}}]);