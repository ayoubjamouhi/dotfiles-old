{"input":{"ourVersion":"1.55.2","commit":"3c4e3df9e89829dce27b7b5c24508306b151f30d","locale":"en","devMode":false,"absoluteFolderPath":"/home/dotnet/.vscode-oss/extensions","isBuiltin":false,"isUnderDevelopment":false,"translations":{},"mtime":1619012198508},"result":[{"name":"vscode-neovim","displayName":"Neo Vim","description":"Real VIM in your Visual Studio Code","icon":"images/icon.png","publisher":"asvetliakov","extensionKind":["ui"],"version":"0.0.78","repository":{"type":"git","url":"https://github.com/asvetliakov/vscode-neovim"},"bugs":{"url":"https://github.com/asvetliakov/vscode-neovim/issues","email":"devpieron@gmail.com"},"engines":{"vscode":"^1.48.0"},"keywords":["keybindings","vi","vim","neovim"],"categories":["Other","Keymaps"],"activationEvents":["*"],"main":"./dist/extension.js","contributes":{"configuration":{"title":"Neovim","properties":{"vscode-neovim.neovimPath":{"type":"string","default":"","title":"Neovim path","markdownDescription":"*Windows, OSX, Linux in Neovim path settings won`t work if this setting is set* Full path to Neovim executable. If you have enabled `useWSL` setting, specify the Linux path to nvim executable instead.","deprecationMessage":"This setting is deprecated. Remove this setting and use neovimExecutablePaths.win32/linux/darwin instead. If you continue to use this setting, keep in mind this setting takes precedence over neovimExecutablePaths.windows/linux/darwin and those settings won't work. If you want them to work, just remove this setting from your settings.json or make its input box in User Settings empty"},"vscode-neovim.neovimExecutablePaths.win32":{"type":"string","default":"","title":"Neovim executable path on Windows","markdownDescription":"Full path to Neovim executable that should be used by the extension if running VS Code on Windows.  \nExample:  \nC:\\tools\\neovim\\Neovim\\bin\\nvim.exe (if you installed using Chocolatey)  \nIf you want to use Windows Subsystem for Linux, enable the `useWSL` setting and set `neovimExecutablePaths.linux` instead"},"vscode-neovim.neovimExecutablePaths.darwin":{"type":"string","default":"","title":"Neovim executable path on OSX","description":"Full path to Neovim executable that should be used by the extension if running VS Code on OSX."},"vscode-neovim.neovimExecutablePaths.linux":{"type":"string","default":"","title":"Neovim executable path on Linux (and in WSL)","markdownDescription":"Full path to Neovim executable that should be used by the extension if running VS Code on Linux or WSL. If `useWSL` setting is checked, vscode-neovim will look for this path in WSL  \nExample:  \n/usr/bin/nvim"},"vscode-neovim.neovimInitPath":{"type":"string","default":"","title":"Custom init.vim path","description":"Full path to custom neovim init file, equals to startup option -u. If checked useWSL flag specify a Linux path. You can also use exists('g:vscode') in your init.vim to check if neovim is being run in vscode and share init file between neovim/vscode","deprecationMessage":"This setting is deprecated. Use neovimInitVimPaths.win32/linux/darwin instead. If you continue to use this setting, keep in mind this setting takes precedence over neovimInitVimPaths.win32/linux/darwin and those settings won't work. If you want them to work, just remove this setting from your settings.json or make its input box in User Settings empty"},"vscode-neovim.neovimInitVimPaths.win32":{"type":"string","default":"","title":"Custom init.vim path on Windows","markdownDescription":"Full path to custom neovim init.vim file on Windows, equals to startup option `-u`. If the `useWSL` setting is checked, the value of the `neovimInitVimPaths.linux` setting will be used to find the init.vim file instead. You can also use `exists('g:vscode')` in your init.vim to check if neovim is being run in vscode and share init file between neovim/vscode"},"vscode-neovim.neovimInitVimPaths.darwin":{"type":"string","default":"","title":"Custom init.vim path on OSX","markdownDescription":"Full path to custom neovim init.vim file on OSX, equals to startup option `-u`. You can also use `exists('g:vscode')` in your init.vim to check if neovim is being run in vscode and share init file between neovim/vscode"},"vscode-neovim.neovimInitVimPaths.linux":{"type":"string","default":"","title":"Custom init.vim path on Linux","markdownDescription":"Full path to custom neovim init.vim file on Linux/WSL, equals to startup option `-u`. If the `useWSL` setting is checked, this path will be used to find `init.vim` in Windows Subsystem for Linux. You can also use `exists('g:vscode')` in your init.vim to check if neovim is being run in vscode and share init file between neovim/vscode"},"vscode-neovim.neovimWidth":{"type":"number","default":1000,"title":"Neovim width","description":"Neovim viewport width. Increase if you're working with long lines and have horizontal scroll problems. Larger values will affect neovim performance"},"vscode-neovim.useCtrlKeysForNormalMode":{"type":"boolean","default":true,"description":"Use Ctrl keys in normal/visual/etc...(except insert) modes"},"vscode-neovim.useCtrlKeysForInsertMode":{"type":"boolean","default":true,"description":"Use Ctrl keys in insert mode"},"vscode-neovim.mouseSelectionStartVisualMode":{"type":"boolean","default":false,"description":"Mouse selection starts visual mode"},"vscode-neovim.useWSL":{"type":"boolean","default":false,"markdownDescription":"Use neovim installed in WSL. If you enable this setting, specify the path to the neovim executable installed in WSL `neovimExecutablePaths.linux` setting"},"vscode-neovim.revealCursorScrollLine":{"type":"boolean","default":false,"markdownDescription":"If 'true' reveals the cursor when scrolling by line and if it is outside view port"},"vscode-neovim.logPath":{"type":"string","default":"","description":"Log file path"},"vscode-neovim.logLevel":{"type":"string","default":"error","enum":["none","error","warn","debug"],"description":"Log Level"},"vscode-neovim.logOutputToConsole":{"type":"boolean","default":false,"description":"When on, print log messages to vscode developer console (not output channel!)"},"vscode-neovim.highlightGroups.ignoreHighlights":{"type":"array","title":"Ignore Highlighs Groups","description":"List of vim highlights groups to ignore","default":["SpecialKey","EndOfBuffer","TermCursor","TermCursorNC","NonText","ErrorMsg","MoreMsg","ModeMsg","LineNr","CursorLineNr","Question","StatusLine","StatusLineNC","VertSplit","Title","VisualNC","WarningMsg","WildMenu","^Diff","Sign","SignColumn","^Spell","^Pmenu","^Tab","^Cursor","ColorColumn","QuickFixLine","Whitespace","NormalNC","Normal","NormalFloat","MsgSeparator","MsgArea","^RedrawDebug","Cursor","lCursor","MatchParen","^Nvim","Operator","Delimiter","Identifier","SpecialChar","Number","Type","String","Error","Comment","Constant","Special","Statement","PreProc","Underlined","Ignore","Todo","Character","Boolean","Float","Function","Conditional","Repeat","Label","Keyword","Exception","Include","Define","Macro","PreCondit","StorageClass","Structure","Typedef","Tag","SpecialComment","Debug","Folded","FoldColumn"]},"vscode-neovim.highlightGroups.highlights":{"type":"object","title":"Highlight Groups Configuration","description":"Define colors for various VIM highlight groups. Values may be 'vim' to use colors from vim or text decoration properties object","additionalProperties":{"oneOf":[{"type":"object"},{"type":"string","const":"vim"}]},"default":{"Directory":"vim","IncSearch":{"backgroundColor":"theme.editor.findMatchBackground","borderColor":"theme.editor.findMatchBorder"},"Search":{"backgroundColor":"theme.editor.findMatchHighlightBackground","borderColor":"theme.editor.findMatchHighlightBorder"},"Visual":{"backgroundColor":"theme.editor.selectionBackground"},"Conceal":"vim","Substitute":"vim"}},"vscode-neovim.highlightGroups.unknownHighlight":{"oneOf":[{"type":"object"},{"type":"string","const":"vim"}],"title":"Unknown Highlight Groups","description":"Highlight Configuration for non defined group. Can accept 'vim' to use colors coming from vim or text decoration properties object","default":"vim"},"vscode-neovim.textDecorationsAtTop":{"type":"boolean","description":"If turned on, text decorations will appear on top of the associated text instead of behind it. Consider turning this on with the EasyMotion plugin.","default":false}}},"commands":[{"command":"vscode-neovim.send","title":"Neovim: send key"},{"command":"vscode-neovim.compositeEscape1","title":"Composite escape key 1"},{"command":"vscode-neovim.compositeEscape2","title":"Composite escape key 2"},{"command":"vscode-neovim.escape","title":"Escape key"},{"command":"vscode-neovim.commit-cmdline","title":"Neovim: Accept cmdline"},{"command":"vscode-neovim.delete-word-left-cmdline","title":"Neovim: Delete word cmdline"},{"command":"vscode-neovim.delete-all-cmdline","title":"Neovim: Delete all cmdline"},{"command":"vscode-neovim.delete-char-left-cmdline","title":"Neovim: Delete char cmdline"},{"command":"vscode-neovim.complete-selection-cmdline","title":"Neovim: Complete selection cmdline"},{"command":"vscode-neovim.history-up-cmdline","title":"Neovim: History up cmdline"},{"command":"vscode-neovim.history-down-cmdline","title":"Neovim: History down cmdline"},{"command":"vscode-neovim.ctrl-b","title":"Neovim: ctrl-b"},{"command":"vscode-neovim.ctrl-d","title":"Neovim: ctrl-d"},{"command":"vscode-neovim.ctrl-e","title":"Neovim: ctrl-e"},{"command":"vscode-neovim.ctrl-f","title":"Neovim: ctrl-f"},{"command":"vscode-neovim.ctrl-u","title":"Neovim: ctrl-u"},{"command":"vscode-neovim.ctrl-y","title":"Neovim: ctrl-y"},{"command":"vscode-neovim.shift-m","title":"Neovim: shift-m"},{"command":"vscode-neovim.shift-l","title":"Neovim: shift-l"},{"command":"vscode-neovim:shift-h","title":"Neovim: shift-h"},{"command":"vscode-neovim.ctrl-a-insert","title":"Neovim: Ctrl-a-insert"},{"command":"vscode-neovim.paste-register","title":"Neovim: Paste from register"}],"keybindings":[{"command":"vscode-neovim.send","key":"ctrl+shift+p","when":"editorTextFocus && neovim.mode == visual","args":"<C-P>"},{"command":"vscode-neovim.send","key":"shift+cmd+p","when":"editorTextFocus && neovim.mode == visual","args":"<C-P>"},{"command":"vscode-neovim.send","key":"F1","when":"editorTextFocus && neovim.mode == visual","args":"<C-P>"},{"command":"list.focusDown","key":"ctrl+n","when":"listFocus && !inputFocus"},{"command":"list.focusUp","key":"ctrl+p","when":"listFocus && !inputFocus"},{"command":"showNextParameterHint","key":"ctrl+n","when":"editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"},{"command":"showPrevParameterHint","key":"ctrl+p","when":"editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"},{"key":"ctrl+n","command":"selectNextSuggestion","when":"textInputFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"},{"key":"ctrl+p","command":"selectPrevSuggestion","when":"textInputFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"},{"command":"workbench.action.quickOpenSelectNext","key":"ctrl+n","when":"inQuickOpen"},{"command":"workbench.action.quickOpenSelectPrevious","key":"ctrl+p","when":"inQuickOpen"},{"command":"vscode-neovim.escape","key":"ctrl+c","when":"editorTextFocus && neovim.init"},{"command":"vscode-neovim.escape","key":"Escape","when":"editorTextFocus && neovim.init"},{"command":"vscode-neovim.escape","key":"ctrl+[","when":"editorTextFocus && neovim.init"},{"command":"vscode-neovim.send","key":"ctrl+shift+o","when":"editorTextFocus && neovim.mode != insert","args":"gO"},{"command":"vscode-neovim.send","key":"cmd+shift+o","when":"editorTextFocus && neovim.mode != insert","args":"gO"},{"command":"vscode-neovim.send","key":"ctrl+g","when":"neovim.mode == cmdline_normal || neovim.mode == cmdline_insert || neovim.mode == cmdline_replace","args":"<C-g>"},{"command":"vscode-neovim.send","key":"ctrl+t","when":"neovim.mode == cmdline_normal || neovim.mode == cmdline_insert || neovim.mode == cmdline_replace","args":"<C-t>"},{"command":"vscode-neovim.send","key":"ctrl+r","when":"neovim.mode == cmdline_normal || neovim.mode == cmdline_insert || neovim.mode == cmdline_replace","args":"<C-r>"},{"command":"vscode-neovim.send","key":"ctrl+l","when":"neovim.mode == cmdline_normal || neovim.mode == cmdline_insert || neovim.mode == cmdline_replace","args":"<C-l>"},{"command":"vscode-neovim.send","key":"ctrl+e","when":"neovim.mode == cmdline_normal || neovim.mode == cmdline_insert || neovim.mode == cmdline_replace","args":"<C-e>"},{"command":"vscode-neovim.history-up-cmdline","key":"up","when":"neovim.mode == cmdline_normal"},{"command":"vscode-neovim.history-up-cmdline","key":"ctrl+p","when":"neovim.mode == cmdline_normal"},{"command":"vscode-neovim.history-down-cmdline","key":"down","when":"neovim.mode == cmdline_normal"},{"command":"vscode-neovim.history-down-cmdline","key":"ctrl+n","when":"neovim.mode == cmdline_normal"},{"command":"vscode-neovim.delete-word-left-cmdline","key":"ctrl+w","when":"neovim.mode == cmdline_normal"},{"command":"vscode-neovim.delete-all-cmdline","key":"ctrl+u","when":"neovim.mode == cmdline_normal"},{"command":"vscode-neovim.delete-char-left-cmdline","key":"ctrl+h","when":"neovim.mode == cmdline_normal"},{"command":"vscode-neovim.complete-selection-cmdline","key":"tab","when":"neovim.mode == cmdline_normal"},{"command":"vscode-neovim.send","key":"backspace","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<BS>"},{"command":"vscode-neovim.send","key":"shift+backspace","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<S-BS>"},{"command":"vscode-neovim.send","key":"ctrl+backspace","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<C-BS>"},{"command":"vscode-neovim.send","key":"delete","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<Del>"},{"command":"vscode-neovim.send","key":"shift+delete","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<S-Del>"},{"command":"vscode-neovim.send","key":"ctrl+delete","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<C-Del>"},{"command":"vscode-neovim.send","key":"tab","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.mode != cmdline_normal","args":"<Tab>"},{"command":"vscode-neovim.send","key":"shift+tab","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.mode != cmdline_normal","args":"<S-Tab>"},{"command":"vscode-neovim.send","key":"down","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<Down>"},{"command":"vscode-neovim.send","key":"up","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<Up>"},{"command":"vscode-neovim.send","key":"left","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<Left>"},{"command":"vscode-neovim.send","key":"right","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<Right>"},{"command":"vscode-neovim.send","key":"ctrl+right","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<C-Right>"},{"command":"vscode-neovim.send","key":"ctrl+left","when":"editorTextFocus && neovim.init && neovim.mode != insert || neovim.recording","args":"<C-Left>"},{"command":"vscode-neovim.send","key":"ctrl+a","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-a>"},{"command":"vscode-neovim.ctrl-b","key":"ctrl+b","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal"},{"command":"vscode-neovim.ctrl-d","key":"ctrl+d","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal"},{"command":"vscode-neovim.ctrl-e","key":"ctrl+e","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal"},{"command":"vscode-neovim.ctrl-f","key":"ctrl+f","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal"},{"command":"vscode-neovim.send","key":"ctrl+i","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-i>"},{"command":"vscode-neovim.send","key":"ctrl+o","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-o>"},{"command":"vscode-neovim.send","key":"ctrl+r","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-r>"},{"command":"vscode-neovim.ctrl-u","key":"ctrl+u","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal"},{"command":"vscode-neovim.send","key":"ctrl+v","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-v>"},{"command":"vscode-neovim.send","key":"ctrl+w","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-w>"},{"command":"vscode-neovim.send","key":"ctrl+x","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-x>"},{"command":"vscode-neovim.ctrl-y","key":"ctrl+y","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal"},{"command":"vscode-neovim.send","key":"ctrl+z","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-z>"},{"command":"vscode-neovim.send","key":"ctrl+]","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-]>"},{"command":"vscode-neovim.send","key":"ctrl+j","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-j>"},{"command":"vscode-neovim.send","key":"ctrl+k","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-k>"},{"command":"vscode-neovim.send","key":"ctrl+l","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-l>"},{"command":"vscode-neovim.send","key":"ctrl+h","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-h>"},{"command":"vscode-neovim.send","key":"ctrl+/","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal","args":"<C-/>"},{"command":"deleteAllLeft","key":"ctrl-u","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert"},{"command":"vscode-neovim.send","key":"ctrl+u","when":"editorTextFocus && neovim.mode == insert && neovim.recording && neovim.ctrlKeysInsert","args":"<C-u>"},{"command":"deleteWordLeft","key":"ctrl+w","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert"},{"command":"vscode-neovim.send","key":"ctrl+w","when":"editorTextFocus && neovim.mode == insert && neovim.recording && neovim.ctrlKeysInsert","args":"<C-w>"},{"command":"deleteLeft","key":"ctrl+h","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert"},{"command":"vscode-neovim.send","key":"ctrl+h","when":"editorTextFocus && neovim.mode == insert && neovim.recording && neovim.ctrlKeysInsert","args":"<C-j>"},{"command":"editor.action.indentLines","key":"ctrl+t","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert"},{"command":"vscode-neovim.send","key":"ctrl+t","when":"editorTextFocus && neovim.mode == insert && neovim.recording && neovim.ctrlKeysInsert","args":"<C-t>"},{"command":"editor.action.outdentLines","key":"ctrl+d","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert"},{"command":"vscode-neovim.send","key":"ctrl+d","when":"editorTextFocus && neovim.mode == insert && neovim.recording && neovim.ctrlKeysInsert","args":"<C-d>"},{"command":"editor.action.insertLineAfter","key":"ctrl+j","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert"},{"command":"vscode-neovim.send","key":"ctrl+j","when":"editorTextFocus && neovim.mode == insert && neovim.recording && neovim.ctrlKeysInsert","args":"<C-j>"},{"command":"vscode-neovim.ctrl-a-insert","key":"ctrl+a","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert"},{"command":"vscode-neovim.send","key":"ctrl+a","when":"editorTextFocus && neovim.mode == insert && neovim.recording && neovim.ctrlKeysInsert","args":"<C-a>"},{"command":"vscode-neovim.send","key":"ctrl+r","when":"editorTextFocus && neovim.mode == insert && neovim.recording && neovim.ctrlKeysInsert","args":"<C-r>"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 0","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"0"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 1","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"1"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 2","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"2"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 3","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"3"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 4","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"4"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 5","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"5"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 6","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"6"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 7","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"7"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 8","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"8"},{"command":"vscode-neovim.paste-register","key":"ctrl+r 9","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"9"},{"command":"vscode-neovim.paste-register","key":"ctrl+r shift-'","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"\""},{"command":"vscode-neovim.paste-register","key":"ctrl+r shift-5","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"%"},{"command":"vscode-neovim.paste-register","key":"ctrl+r shift-3","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"#"},{"command":"vscode-neovim.paste-register","key":"ctrl+r shift-8","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"*"},{"command":"vscode-neovim.paste-register","key":"ctrl+r shift-=","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"+"},{"command":"vscode-neovim.paste-register","key":"ctrl+r shift-;","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":":"},{"command":"vscode-neovim.paste-register","key":"ctrl+r .","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"."},{"command":"vscode-neovim.paste-register","key":"ctrl+r -","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"-"},{"command":"vscode-neovim.paste-register","key":"ctrl+r =","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"="},{"command":"vscode-neovim.paste-register","key":"ctrl+r ka","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"a"},{"command":"vscode-neovim.paste-register","key":"ctrl+r b","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"b"},{"command":"vscode-neovim.paste-register","key":"ctrl+r c","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"c"},{"command":"vscode-neovim.paste-register","key":"ctrl+r d","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"d"},{"command":"vscode-neovim.paste-register","key":"ctrl+r e","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"e"},{"command":"vscode-neovim.paste-register","key":"ctrl+r f","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"f"},{"command":"vscode-neovim.paste-register","key":"ctrl+r g","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"g"},{"command":"vscode-neovim.paste-register","key":"ctrl+r h","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"h"},{"command":"vscode-neovim.paste-register","key":"ctrl+r i","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"i"},{"command":"vscode-neovim.paste-register","key":"ctrl+r j","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"j"},{"command":"vscode-neovim.paste-register","key":"ctrl+r k","when":"editorTextFocus && neovim.mode == insert &&& !neovim.recording & neovim.ctrlKeysInsert","args":"k"},{"command":"vscode-neovim.paste-register","key":"ctrl+r l","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"l"},{"command":"vscode-neovim.paste-register","key":"ctrl+r m","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"m"},{"command":"vscode-neovim.paste-register","key":"ctrl+r n","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"n"},{"command":"vscode-neovim.paste-register","key":"ctrl+r o","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"o"},{"command":"vscode-neovim.paste-register","key":"ctrl+r p","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"p"},{"command":"vscode-neovim.paste-register","key":"ctrl+r q","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"q"},{"command":"vscode-neovim.paste-register","key":"ctrl+r r","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"r"},{"command":"vscode-neovim.paste-register","key":"ctrl+r s","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"s"},{"command":"vscode-neovim.paste-register","key":"ctrl+r t","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"t"},{"command":"vscode-neovim.paste-register","key":"ctrl+r u","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"u"},{"command":"vscode-neovim.paste-register","key":"ctrl+r v","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"v"},{"command":"vscode-neovim.paste-register","key":"ctrl+r w","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"w"},{"command":"vscode-neovim.paste-register","key":"ctrl+r x","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"x"},{"command":"vscode-neovim.paste-register","key":"ctrl+r y","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"y"},{"command":"vscode-neovim.paste-register","key":"ctrl+r z","when":"editorTextFocus && neovim.mode == insert && !neovim.recording && neovim.ctrlKeysInsert","args":"z"}]},"scripts":{"lint":"eslint --ext .ts src","test":"node ./out/test/runTest.js","pretest":"yarn run test-compile","vscode:prepublish":"webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch --info-verbosity verbose","test-compile":"tsc -p ./"},"devDependencies":{"@types/glob":"^7.1.1","@types/lodash-es":"^4.17.3","@types/mocha":"^7.0.2","@types/msgpack-lite":"^0.1.7","@types/node":"^14.0.13","@types/vscode":"^1.48.0","@typescript-eslint/eslint-plugin":"^3.3.0","@typescript-eslint/parser":"^3.3.0","eslint":"^7.2.0","eslint-config-prettier":"^6.9.0","eslint-plugin-import":"^2.19.1","eslint-plugin-prettier":"^3.1.2","glob":"^7.1.6","mocha":"^8.1.1","prettier":"^2.0.5","source-map-support":"^0.5.16","ts-loader":"^8.0.4","typescript":"^4.0.2","vscode-test":"^1.3.0","webpack":"^4.44.2","webpack-cli":"^3.3.12"},"dependencies":{"fast-diff":"^1.2.0","lodash-es":"^4.17.15","neovim":"^4.7.0","ts-wcwidth":"^2.0.0"},"uuid":"caf8995c-5426-4bf7-9d01-f7968ebd49bb","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"asvetliakov.vscode-neovim","identifier":{"value":"asvetliakov.vscode-neovim","_lower":"asvetliakov.vscode-neovim"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/asvetliakov.vscode-neovim-0.0.78","path":"/home/dotnet/.vscode-oss/extensions/asvetliakov.vscode-neovim-0.0.78","scheme":"file"}},{"name":"vscode-tailwindcss","displayName":"Tailwind CSS IntelliSense","description":"Intelligent Tailwind CSS tooling for VS Code","preview":true,"author":"Brad Cornes <hello@bradley.dev>","license":"MIT","version":"0.5.10","homepage":"https://github.com/tailwindlabs/tailwindcss-intellisense","bugs":{"url":"https://github.com/tailwindlabs/tailwindcss-intellisense/issues","email":"hello@bradley.dev"},"repository":{"type":"git","url":"https://github.com/tailwindlabs/tailwindcss-intellisense.git"},"publisher":"bradlc","keywords":["tailwind","tailwindcss","css","intellisense","autocomplete","vscode"],"engines":{"vscode":"^1.33.0"},"categories":["Linters","Other"],"galleryBanner":{"color":"#f9fafb"},"icon":"media/icon.png","activationEvents":["workspaceContains:**/{tailwind,tailwind.config,tailwind-config,.tailwindrc}.{js,cjs}"],"main":"dist/extension/index.js","contributes":{"grammars":[{"scopeName":"tailwindcss.injection","path":"./syntaxes/tailwind.tmLanguage.json","injectTo":["source.css","source.css.scss","source.css.less","source.css.postcss","source.vue","source.svelte","text.html"]}],"configuration":{"title":"Tailwind CSS IntelliSense","properties":{"tailwindCSS.emmetCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`"},"tailwindCSS.includeLanguages":{"type":"object","additionalProperties":{"type":"string"},"default":{},"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`"},"tailwindCSS.colorDecorators":{"type":"string","enum":["inherit","on","off"],"markdownEnumDescriptions":["Color decorators are rendered if `editor.colorDecorators` is enabled.","Color decorators are rendered.","Color decorators are not rendered."],"default":"inherit","markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","scope":"language-overridable"},"tailwindCSS.validate":{"type":"boolean","default":true,"markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","scope":"language-overridable"},"tailwindCSS.lint.cssConflict":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","scope":"language-overridable"},"tailwindCSS.lint.invalidApply":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)","scope":"language-overridable"},"tailwindCSS.lint.invalidScreen":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)","scope":"language-overridable"},"tailwindCSS.lint.invalidVariant":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)","scope":"language-overridable"},"tailwindCSS.lint.invalidConfigPath":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)","scope":"language-overridable"},"tailwindCSS.lint.invalidTailwindDirective":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)","scope":"language-overridable"},"tailwindCSS.experimental.classRegex":{"type":"array","scope":"language-overridable"},"tailwindCSS.showPixelEquivalents":{"type":"boolean","default":true,"markdownDescription":"Show `px` equivalents for `rem` CSS values."},"tailwindCSS.rootFontSize":{"type":"number","default":16,"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`."}}}},"scripts":{"dev":"glob-exec --foreach --parallel \"src/*.ts\" -- \"ncc build {{file}} --watch -o dist/{{file.toString().replace(/^src\\//, '').replace(/\\.ts$/, '')}}\"","build":"glob-exec --foreach --parallel \"src/*.ts\" -- \"ncc build {{file}} -o dist/{{file.toString().replace(/^src\\//, '').replace(/\\.ts$/, '')}}\"","minify":"glob-exec --foreach --parallel \"dist/**/*.js\" -- \"terser {{file}} --compress --mangle --output {{file.toString()}}\"","package":"vsce package","publish":"vsce publish","vscode:prepublish":"npm run clean && npm run build && npm run minify","clean":"rimraf dist","test":"jest"},"dependencies":{"@types/debounce":"^1.2.0","@types/mocha":"^5.2.0","@types/node":"^13.9.3","@types/vscode":"^1.32.0","@zeit/ncc":"^0.22.0","bufferutil":"^4.0.2","callsite":"^1.0.0","chokidar":"^3.3.1","debounce":"^1.2.0","dlv":"^1.1.3","dset":"^2.0.1","esm":"^3.2.25","execa":"^3.4.0","fast-glob":"^3.2.4","find-up":"^5.0.0","glob-exec":"^0.1.1","import-from":"^3.0.0","jest":"^25.5.4","klona":"^2.0.4","mitt":"^1.2.0","normalize-path":"^3.0.0","pkg-up":"^3.1.0","postcss":"^7.0.27","postcss-selector-parser":"^6.0.2","resolve-from":"^5.0.0","rimraf":"^3.0.2","semver":"^7.3.2","stack-trace":"0.0.10","tailwindcss-language-service":"0.0.12","terser":"^4.6.12","tiny-invariant":"^1.1.0","tslint":"^5.16.0","typescript":"^3.8.3","utf-8-validate":"^5.0.3","vsce":"^1.76.1","vscode-languageclient":"^6.1.3","vscode-languageserver":"^6.1.1","vscode-languageserver-textdocument":"^1.0.1","vscode-uri":"^2.1.1"},"uuid":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"bradlc.vscode-tailwindcss","identifier":{"value":"bradlc.vscode-tailwindcss","_lower":"bradlc.vscode-tailwindcss"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/bradlc.vscode-tailwindcss-0.5.10","path":"/home/dotnet/.vscode-oss/extensions/bradlc.vscode-tailwindcss-0.5.10","scheme":"file"}},{"name":"bracket-pair-colorizer","displayName":"Bracket Pair Colorizer","description":"A customizable extension for colorizing matching brackets","version":"1.0.61","publisher":"CoenraadS","engines":{"vscode":"^1.23.0"},"icon":"images/icon.png","categories":["Other"],"activationEvents":["*"],"keywords":["bracket","brackets","pair","color","colour","multi-root ready"],"galleryBanner":{"color":"#1E1E1E","theme":"dark"},"main":"./out/src/extension","contributes":{"commands":[{"command":"bracket-pair-colorizer.expandBracketSelection","title":"Expand Bracket Selection"},{"command":"bracket-pair-colorizer.undoBracketSelection","title":"Undo Bracket Selection"}],"configuration":{"type":"object","title":"BracketPair","properties":{"bracketPairColorizer.timeOut":{"type":"number","default":200,"description":"How long the user should idle for, before the document is colorized. Set to 0 to disable","scope":"resource"},"bracketPairColorizer.forceUniqueOpeningColor":{"type":"boolean","default":false,"description":"Ensure that an opening brackets color does not match a previous brackets color","scope":"resource"},"bracketPairColorizer.forceIterationColorCycle":{"type":"boolean","default":false,"description":"Should opening brackets iterate the color cycle even if they are not nested","scope":"resource"},"bracketPairColorizer.colorMode":{"type":"string","enum":["Consecutive","Independent"],"default":"Consecutive","description":"Should different brackets share a color group (Consecutive), or use their own color group (Independent)","scope":"resource"},"bracketPairColorizer.highlightActiveScope":{"type":"boolean","default":false,"description":"Should the active scope brackets always be highlighted? Recommended to disable editor.matchBrackets if using this feature.","scope":"resource"},"bracketPairColorizer.activeScopeCSS":{"type":"array","default":["borderStyle : solid","borderWidth : 1px","borderColor : {color}; opacity: 0.5"],"description":"CSS for the active scope. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used","scope":"resource"},"bracketPairColorizer.showBracketsInGutter":{"type":"boolean","default":false,"description":"Show active bracket scope in gutter?","scope":"resource"},"bracketPairColorizer.showBracketsInRuler":{"type":"boolean","default":false,"description":"Show active bracket scope in ruler?","scope":"resource"},"bracketPairColorizer.rulerPosition":{"type":"string","enum":["Center","Full","Left","Right"],"default":"Center","description":"Show active bracket scope in ruler?","scope":"resource"},"bracketPairColorizer.showVerticalScopeLine":{"type":"boolean","default":true,"description":"Show a vertical line on the left side of the editor representing the active bracket scope?","scope":"resource"},"bracketPairColorizer.showHorizontalScopeLine":{"type":"boolean","default":true,"description":"Show a horizontal line to create a block around the active bracket scope?","scope":"resource"},"bracketPairColorizer.scopeLineRelativePosition":{"type":"boolean","default":true,"description":"True: Scope Line will start from the ending bracket position. False: Scope Line will always be at column 0","scope":"resource"},"bracketPairColorizer.scopeLineCSS":{"type":"array","default":["borderStyle : solid","borderWidth : 1px","borderColor : {color}; opacity: 0.5"],"description":"CSS for the scope line. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used","scope":"resource"},"bracketPairColorizer.consecutivePairColors":{"type":"array","default":["()","[]","{}",["Gold","Orchid","LightSkyBlue"],"Red"],"description":"Define paired characters and their shared color group","scope":"resource"},"bracketPairColorizer.independentPairColors":{"type":["array"],"items":{"type":["array"]},"default":[["()",["Gold","Orchid","LightSkyBlue"],"Red"],["[]",["Gold","Orchid","LightSkyBlue"],"Red"],["{}",["Gold","Orchid","LightSkyBlue"],"Red"]],"description":"Define paired characters and their color groups","scope":"resource"},"bracketPairColorizer.excludedLanguages":{"type":"array","default":[],"description":"Don't colorize files of these languages","scope":"window"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.107","@types/prismjs":"^1.9.0","mocha":"^2.3.3","tslint":"^4.5.1","typescript":"^2.8.3","vscode":"^1.1.16"},"repository":{"type":"git","url":"https://github.com/CoenraadS/BracketPair"},"license":"SEE LICENSE IN LICENSE.md","dependencies":{"escape-html":"^1.0.3","prismjs":"^1.15.0","vscode-uri":"^1.0.3"},"uuid":"f583eafd-aa0d-4ccb-8f44-d1e610389660","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"CoenraadS.bracket-pair-colorizer","identifier":{"value":"CoenraadS.bracket-pair-colorizer","_lower":"coenraads.bracket-pair-colorizer"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/coenraads.bracket-pair-colorizer-1.0.61","path":"/home/dotnet/.vscode-oss/extensions/coenraads.bracket-pair-colorizer-1.0.61","scheme":"file"}},{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"2.1.20","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.53.0"},"activationEvents":["onStartupFinished"],"extensionKind":["workspace"],"main":"./client/out/extension","contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled or not.","deprecationMessage":"This setting is deprecated. Disable ESLint using the extensions viewlet."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules."},"eslint.alwaysShowStatus":{"type":"boolean","default":false,"description":"Always show the ESlint status bar item.","scope":"window"},"eslint.nodeEnv":{"scope":"resource","type":["string","null"],"default":null,"description":"The value of NODE_ENV to use when running eslint tasks."},"eslint.nodePath":{"scope":"machine-overridable","type":["string","null"],"default":null,"description":"A path added to NODE_PATH when resolving the eslint module."},"eslint.options":{"scope":"resource","type":"object","default":{},"description":"The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off.","deprecationMessage":"The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member."},"eslint.quiet":{"scope":"resource","type":"boolean","default":false,"description":"Turns on quiet mode, which ignores warnings."},"eslint.onIgnoredFiles":{"scope":"resource","type":"string","enum":["warn","off"],"default":"off","description":"Whether ESLint should issue a warning on ignored files."},"eslint.migration.2_x":{"scope":"application","type":"string","enum":["off","on"],"default":"on","description":"Whether ESlint should migrate auto fix on save settings."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"mode":{"type":"string","enum":["auto","location"],"default":"location"}},"required":["mode"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}},"deprecationMessage":"Use the new !cwd form.","required":["directory"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["directory"]},{"type":"object","properties":{"pattern":{"type":"string","description":"A glob pattern to match a working directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["pattern"]}]}},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint."},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language."}},"deprecationMessage":"Auto Fix is enabled by default. Use the single string form."}]},"description":"An array of language ids which should be validated by ESLint. If not installed ESLint will show an error."},"eslint.probe":{"scope":"resource","type":"array","items":{"type":"string"},"default":["javascript","javascriptreact","typescript","typescriptreact","html","vue","markdown"],"description":"An array of language ids for which the extension should probe if support is installed."},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"This option is deprecated. Use eslint.lintTask.enable instead.","description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.enable":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.options":{"scope":"resource","type":"string","default":".","description":"Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface)."},"eslint.runtime":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"The location of the node binary to run ESLint under.\n\n- When specified as a user/machine setting, the Node version from `eslint.runtime` automatically replaces the built-in version.\n- When specified as a workspace setting, `eslint.runtime` allows you to switch to use that version with the `ESLint: Select Node version` command."},"eslint.debug":{"scope":"window","type":"boolean","default":false,"description":"Enables ESLint debug mode (same as --debug on the command line)"},"eslint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true,"location":"separateLine"},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the disable code actions."},"location":{"type":"string","enum":["separateLine","sameLine"],"default":"separateLine","description":"Configure the disable rule code action to insert the comment on the same line or a new line."}},"additionalProperties":false},"eslint.codeAction.showDocumentation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the documentation code actions."}},"additionalProperties":false},"eslint.codeActionsOnSave.mode":{"scope":"resource","type":"string","enum":["all","problems"],"enumDescriptions":["Fixes all possible problems in the file. This option might take some time.","Only fixes reported problems that have non overlapping textual edits. This options runs a lot faster."],"default":"all","description":"Specifies the code action mode. Possible values are 'all' and 'problems'."},"eslint.format.enable":{"scope":"resource","type":"boolean","default":false,"description":"Enables ESLint as a formatter."},"eslint.rules.customizations":{"description":"Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules.","items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array"}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"},{"title":"Migrate Settings","category":"ESLint","command":"eslint.migrateSettings"},{"title":"Reset Library Execution Decisions","category":"ESLint","command":"eslint.resetLibraryExecution"},{"title":"Manage Library Execution","category":"ESLint","command":"eslint.manageLibraryExecution"},{"title":"Select Node Runtime","category":"ESLint","command":"eslint.selectNodeRuntime"},{"title":"Select Node Path","category":"ESLint","command":"eslint.selectNodePath"},{"title":"Restart ESLint Server","category":"ESLint","command":"eslint.restart"}],"taskDefinitions":[{"type":"eslint"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"ignore","extensions":[".eslintignore"]},{"id":"jsonc","filenames":[".eslintrc.json"]}]},"scripts":{"vscode:prepublish":"npm run webpack","webpack":"npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js","webpack:dev":"npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js","compile":"tsc -b","compile:client":"tsc -b ./client/tsconfig.json","compile:server":"tsc -b ./server/tsconfig.json","watch":"tsc -b -w","lint":"npm run lint:client && npm run lint:server","lint:client":"eslint --config ./client/.eslintrc.json ./client/src/*.ts","lint:server":"eslint --config ./server/.eslintrc.json ./server/src/*.ts","clean":"rimraf client/out && rimraf server/out","postinstall":"cd client && npm install && cd ../server && npm install && cd .."},"devDependencies":{"@types/mocha":"^8.0.4","@types/node":"^12.12.6","@typescript-eslint/eslint-plugin":"^4.9.1","@typescript-eslint/parser":"^4.9.1","eslint":"^7.15.0","merge-options":"^3.0.4","mocha":"^8.2.1","rimraf":"^3.0.2","ts-loader":"^8.0.11","typescript":"^4.1.2","webpack":"^5.10.0","webpack-cli":"^4.2.0"},"uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"dbaeumer.vscode-eslint","identifier":{"value":"dbaeumer.vscode-eslint","_lower":"dbaeumer.vscode-eslint"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/dbaeumer.vscode-eslint-2.1.20","path":"/home/dotnet/.vscode-oss/extensions/dbaeumer.vscode-eslint-2.1.20","scheme":"file"}},{"name":"EditorConfig","displayName":"EditorConfig for VS Code","description":"EditorConfig Support for Visual Studio Code","publisher":"EditorConfig","version":"0.16.4","icon":"EditorConfig_icon.png","engines":{"vscode":"^1.51.1"},"author":"EditorConfig Team","license":"MIT","categories":["Other"],"keywords":["editor","config","multi-root ready"],"homepage":"https://github.com/editorconfig/editorconfig-vscode/blob/master/README.md","repository":{"type":"git","url":"https://github.com/editorconfig/editorconfig-vscode.git"},"bugs":{"url":"https://github.com/editorconfig/editorconfig-vscode/issues"},"galleryBanner":{"color":"#37699A","theme":"dark"},"activationEvents":["*"],"main":"./out/editorConfigMain.js","types":"./out/editorConfigMain.d.ts","contributes":{"commands":[{"command":"EditorConfig.generate","title":"Generate .editorconfig"}],"configuration":{"title":"EditorConfig","properties":{"editorconfig.generateAuto":{"type":"boolean","default":true,"description":"Automatically generates an .editorconfig file according to your current editor settings."},"editorconfig.template":{"type":"string","default":"default","description":"If generateAuto is false, this template path will be used for each newly-generated .editorconfig file."}}},"menus":{"commandPalette":[{"command":"EditorConfig.generate","when":"explorerResourceIsFolder"}],"explorer/context":[{"command":"EditorConfig.generate","when":"explorerResourceIsFolder","group":"EditorConfig@1"}]},"languages":[{"id":"editorconfig","extensions":[".editorconfig"],"aliases":["EditorConfig","editorconfig"],"filenames":[],"configuration":"./editorconfig.language-configuration.json"}],"grammars":[{"language":"editorconfig","scopeName":"source.editorconfig","path":"./syntaxes/editorconfig.tmLanguage.json"}]},"dependencies":{"editorconfig":"^0.15"},"devDependencies":{"@types/glob":"^7","@types/mocha":"^8","@types/node":"^14","@types/vscode":"^1","@typescript-eslint/eslint-plugin":"^4","@typescript-eslint/parser":"^4","eslint":"^7","eslint-config-prettier":"^6","eslint-config-xo":"^0.33","eslint-plugin-prettier":"^3","glob":"^7","husky":"^4","lint-staged":"^10","mocha":"^8","prettier":"^2","rimraf":"^3","typescript":"^4","vscode-test":"^1","vscode-test-utils":"^1"},"scripts":{"clean":"rimraf out","prebuild":"npm run clean","build":"tsc","postbuild":"cp -r src/test/suite/fixtures out/test/suite && cp src/DefaultTemplate.editorconfig out","lint":"eslint src/**/*.ts","pretest":"npm run lint && npm run build","prewatch":"npm run build","watch":"tsc -watch","check-types":"tsc --noEmit","test":"node out/test/runTest.js","vscode:prepublish":"npm run build"},"husky":{"hooks":{"pre-commit":"lint-staged","pre-push":"npm run lint && npm run check-types"}},"lint-staged":{"*.ts":["eslint --fix","prettier --write","git add"],"*.{json,md}":["prettier --write","git add"],"*.js":["git reset"]},"eslintConfig":{"extends":["xo","prettier"],"env":{"jest":true,"node":true},"rules":{"prettier/prettier":"error"},"plugins":["prettier"]},"prettier":{"arrowParens":"avoid","proseWrap":"always","semi":false,"singleQuote":true,"trailingComma":"all"},"uuid":"f60a60a6-95ba-42d4-b41c-3d24c1b89588","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"EditorConfig.EditorConfig","identifier":{"value":"EditorConfig.EditorConfig","_lower":"editorconfig.editorconfig"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/editorconfig.editorconfig-0.16.4","path":"/home/dotnet/.vscode-oss/extensions/editorconfig.editorconfig-0.16.4","scheme":"file"}},{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"6.3.2","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.53.0"},"keywords":["multi-root ready","prettier","formatter","javascript","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install","prettier":"prettier --write '**/*.{ts,json,md,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","postinstall":"husky install"},"lint-staged":{"**/*.{ts,json,md,yml,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/glob":"^7.1.3","@types/lodash":"^4.14.160","@types/mocha":"^8.0.0","@types/node":"^12","@types/prettier":"^2.1.0","@types/resolve":"^1.17.0","@types/semver":"^7.3.1","@types/sinon":"^9.0.11","@types/vscode":"1.53.0","@typescript-eslint/eslint-plugin":"^4.17.0","@typescript-eslint/parser":"^4.3.0","eslint":"^7.10.0","eslint-config-prettier":"^8.1.0","glob":"^7.1.6","husky":"^6.0.0","lint-staged":"^10.5.3","mocha":"^8.0.1","sinon":"^10.0.0","ts-loader":"^8.0.18","typescript":"^4.2.3","vsce":"^1.80.0","vscode-nls-dev":"^3.3.2","vscode-test":"^1.4.0","webpack":"^5.24.4","webpack-cli":"^4.2.0"},"dependencies":{"find-up":"^5.0.0","prettier":"^2.2.1","resolve":"^1.17.0","semver":"^7.3.4","vscode-nls":"^5.0.0"},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether prettier is enabled or not.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"If true, this extension will process files in node_modules","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a .prettierignore file","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the prettier module","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. Valid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"resource"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines","scope":"resource"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX","scope":"resource"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global whitespace sensitivity for HTML files.\n Valid options:\n- `css` - Respect the default value of CSS display property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignores` - Whitespaces are considered insensitive.","scope":"resource"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files. Some people (like the creator of Vue) don’t indent to save an indentation level, but this might break code folding in your editor.","scope":"resource"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier","scope":"resource"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted","scope":"resource"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"resource"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.resetModuleExecutionState","title":"Prettier: Reset Module Execution State"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/esbenp.prettier-vscode-6.3.2","path":"/home/dotnet/.vscode-oss/extensions/esbenp.prettier-vscode-6.3.2","scheme":"file"}},{"name":"Jfna","displayName":"Jfna","description":"theme by gemouhi","publisher":"gemouhi","version":"0.0.1","engines":{"vscode":"^1.42.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"jfna","uiTheme":"vs-dark","path":"./themes/jfna-color-theme.json"}]},"uuid":"0a3645bf-1c15-4c4d-87b2-37ccc6db5ed5","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"gemouhi.Jfna","identifier":{"value":"gemouhi.Jfna","_lower":"gemouhi.jfna"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/gemouhi.jfna-0.0.1","path":"/home/dotnet/.vscode-oss/extensions/gemouhi.jfna-0.0.1","scheme":"file"}},{"name":"vscode-styled-components","displayName":"vscode-styled-components","description":"Syntax highlighting for styled-components","version":"1.5.0","publisher":"jpoissonnier","icon":"logo.png","license":"MIT","repository":{"type":"git","url":"https://github.com/styled-components/vscode-styled-components.git"},"main":"dist/extension.js","engines":{"vscode":"^1.49.0"},"categories":["Programming Languages"],"scripts":{"format":"prettier --write .","lint":"prettier --check .","compile":"webpack --mode development","test":"node ./src/tests/runTests.js","watch":"webpack --mode development --watch","vscode:prepublish":"webpack --mode production","prepare":"husky install"},"activationEvents":["onLanguage:typescriptreact","onLanguage:javascriptreact"],"contributes":{"languages":[{"id":"source.css.styled","aliases":["CSS (Styled Components)"],"configuration":"./css.styled.configuration.json"}],"grammars":[{"language":"source.css.styled","scopeName":"source.css.styled","path":"./syntaxes/css.styled.json"},{"injectTo":["source.js","source.ts","source.jsx","source.js.jsx","source.tsx","source.vue","source.svelte"],"scopeName":"styled","path":"./syntaxes/styled-components.json","embeddedLanguages":{"source.css.scss":"css","meta.embedded.line.ts":"typescript"}}],"typescriptServerPlugins":[{"name":"typescript-styled-plugin","enableForWorkspaceTypeScriptVersions":true}]},"dependencies":{"d3-color":"^2.0.0","typescript-styled-plugin":"0.15.0","vsce":"^1.84.0"},"resolutions":{"vscode-css-languageservice":"^4.3.0"},"devDependencies":{"@types/d3-color":"^2.0.0","@types/glob":"^5.0.35","@types/mocha":"^8.0.3","@types/node":"^14.10.1","@types/vscode":"^1.47.0","clean-webpack-plugin":"^3.0.0","glob":"7.1.6","husky":"^5.0.0-beta.0","mocha":"^8.1.3","prettier":"^2.1.2","ts-loader":"^8.0.3","typescript":"^4.0.3","vscode-test":"^1.4.0","webpack":"^5.10.0","webpack-cli":"^4.2.0"},"uuid":"06cc3e44-aedb-41b8-a4ea-29ebf3c491fd","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"jpoissonnier.vscode-styled-components","identifier":{"value":"jpoissonnier.vscode-styled-components","_lower":"jpoissonnier.vscode-styled-components"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/jpoissonnier.vscode-styled-components-1.5.0","path":"/home/dotnet/.vscode-oss/extensions/jpoissonnier.vscode-styled-components-1.5.0","scheme":"file"}},{"name":"sublime-keybindings","displayName":"Sublime Text Keymap and Settings Importer","description":"Import Sublime Text settings and keybindings into VS Code.","version":"4.0.8","publisher":"ms-vscode","license":"SEE LICENSE IN LICENSE.md","engines":{"vscode":"^1.53.0"},"categories":["Keymaps"],"keywords":["keymap","Importer","Settings","Sublime Text"],"activationEvents":["*","onCommand:extension.importFromSublime"],"main":"./dist/extension.js","browser":"./dist/web/extension.js","preview":false,"extensionKind":["ui","workspace","web"],"icon":"sublime_keyboard_with_padding.png","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-sublime-keybindings.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-sublime-keybindings/issues"},"scripts":{"test":"node ./out/test/runTests.js","pretest":"tsc -p ./","vscode:prepublish":"npm run package && npm run package-web","package":"webpack --mode production --config ./build/node-extension.webpack.config.js","compile":"webpack --config ./build/node-extension.webpack.config.js","watch":"webpack --watch --info-verbosity verbose --config ./build/node-extension.webpack.config.js","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --info-verbosity verbose --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --config ./build/web-extension.webpack.config.js","lint":"tslint -p ./"},"devDependencies":{"@types/glob":"^7.1.1","@types/mocha":"^5.2.6","@types/node":"^12.12.0","@types/vscode":"^1.53.0","@types/relaxed-json":"^1.0.0","glob":"^7.1.4","mocha":"^6.1.4","source-map-support":"^0.5.12","tslint":"^5.19.0","typescript":"^3.8.3","vscode-test":"^1.3.0","ts-loader":"^4.4.2","webpack":"^4.43.0","webpack-cli":"^3.3.12"},"dependencies":{"relaxed-json":"^1.0.1"},"contributes":{"menus":{"commandPalette":[{"command":"extension.importFromSublime","when":""}]},"commands":[{"command":"extension.importFromSublime","title":"Sublime Text Keymap: Import Sublime Text Settings"}],"keybindings":[{"mac":"cmd+y","win":"ctrl+y","linux":"ctrl+y","key":"ctrl+y","command":"redo","when":"editorTextFocus && !editorReadonly"},{"mac":"ctrl+shift+cmd+f","win":"shift+f11","linux":"shift+f11","key":"shift+f11","command":"workbench.action.toggleZenMode"},{"mac":"cmd+w","win":"ctrl+w","linux":"ctrl+w","key":"ctrl+w","command":"workbench.action.closeActiveEditor"},{"mac":"shift+cmd+[","key":"ctrl+pageup","command":"workbench.action.previousEditor"},{"mac":"shift+cmd+]","key":"ctrl+pagedown","command":"workbench.action.nextEditor"},{"mac":"alt+cmd+s","key":"none","command":"workbench.action.files.saveAll"},{"mac":"cmd+k cmd+b","win":"ctrl+k ctrl+b","linux":"ctrl+k ctrl+b","key":"ctrl+k ctrl+b","command":"workbench.action.toggleSidebarVisibility"},{"mac":"ctrl+alt+up","key":"ctrl+up","command":"scrollLineUp","when":"editorTextFocus"},{"mac":"ctrl+alt+down","key":"ctrl+down","command":"scrollLineDown","when":"editorTextFocus"},{"mac":"cmd+t","key":"ctrl+p","command":"workbench.action.quickOpen"},{"mac":"cmd+r","win":"ctrl+r","linux":"ctrl+r","key":"ctrl+r","command":"workbench.action.gotoSymbol"},{"mac":"cmd+r","win":"ctrl+;","linux":"ctrl+;","key":"ctrl+;","command":"workbench.action.gotoSymbol"},{"mac":"cmd+alt+down","key":"f12","command":"editor.action.goToDeclaration"},{"win":"alt+-","linux":"alt+-","key":"ctrl+-","command":"workbench.action.navigateBack"},{"win":"alt+shift+-","linux":"alt+shift+-","key":"ctrl+shift+-","command":"workbench.action.navigateForward"},{"mac":"cmd+g","win":"f3","linux":"f3","key":"f3","command":"editor.action.nextMatchFindAction","when":"editorTextFocus"},{"mac":"f4","win":"f4","linux":"f4","key":"f4","command":"editor.action.nextMatchFindAction","when":"editorTextFocus"},{"mac":"shift+f4","win":"shift+f4","linux":"shift+f4","key":"shift+f4","command":"editor.action.previousMatchFindAction","when":"editorTextFocus"},{"mac":"ctrl+cmd+up","win":"ctrl+shift+up","linux":"ctrl+shift+up","key":"ctrl+shift+up","command":"editor.action.moveLinesUpAction","when":"editorTextFocus"},{"mac":"ctrl+cmd+down","win":"ctrl+shift+down","linux":"ctrl+shift+down","key":"ctrl+shift+down","command":"editor.action.moveLinesDownAction","when":"editorTextFocus"},{"mac":"cmd+alt+/","win":"ctrl+shift+/","linux":"ctrl+shift+/","key":"ctrl+shift+/","command":"editor.action.commentLine","when":"editorTextFocus"},{"mac":"cmd+k cmd+up","win":"ctrl+k ctrl+up","linux":"ctrl+k ctrl+up","key":"ctrl+k ctrl+up","command":"workbench.action.splitEditor"},{"mac":"alt+cmd+1","linux":"alt+shift+1","win":"alt+shift+1","key":"alt+shift+1","command":"workbench.action.joinTwoGroups"},{"mac":"alt+cmd+2","win":"alt+shift+2","linux":"alt+shift+2","key":"alt+shift+2","command":"workbench.action.splitEditor"},{"mac":"alt+cmd+8","win":"alt+shift+8","linux":"alt+shift+8","key":"alt+shift+8","command":"workbench.action.toggleEditorGroupLayout"},{"mac":"cmd+k cmd+down","win":"ctrl+k ctrl+down","linux":"ctrl+k ctrl+down","key":"ctrl+k ctrl+down","command":"workbench.action.closeActiveEditor"},{"mac":"alt+cmd+[","key":"ctr+shift+[","command":"editor.fold","when":"editorFocus"},{"mac":"cmd+alt+]","key":"ctrl+shift+]","command":"editor.unfold","when":"editorFocus"},{"mac":"cmd+k cmd+0","win":"ctrl+k ctrl+0","linux":"ctrl+k ctrl+0","key":"ctrl+k ctrl+0","command":"editor.unfoldAll","when":"editorFocus"},{"mac":"alt+f12","key":"alt+f12","command":"editor.action.showContextMenu","when":"editorTextFocus"},{"mac":"cmd+shift+d","win":"ctrl+shift+d","linux":"ctrl+shift+d","key":"ctrl+shift+d","command":"editor.action.copyLinesDownAction","when":"editorFocus"},{"mac":"cmd+l","win":"ctrl+l","linux":"ctrl+l","key":"ctrl+l","command":"expandLineSelection","when":"editorFocus"},{"mac":"cmd+d","win":"ctrl+d","linux":"ctrl+d","key":"ctrl+d","command":"editor.action.addSelectionToNextFindMatch","when":"editorFocus"},{"mac":"ctrl+m","win":"ctrl+m","linux":"ctrl+m","key":"ctrl+m","command":"editor.action.jumpToBracket","when":"editorFocus"},{"mac":"cmd+alt+/","win":"ctrl+shift+/","linux":"ctrl+shift+/","key":"ctrl+shift+/","command":"editor.action.blockComment","when":"editorFocus"},{"mac":"cmd+alt+f","win":"ctrl+h","linux":"ctrl+h","key":"ctrl+h","command":"editor.action.startFindReplaceAction"},{"mac":"ctrl+shift+k","win":"ctrl+shift+k","linux":"ctrl+shift+k","key":"ctrl+shift+k","command":"editor.action.deleteLines","when":"editorFocus"},{"mac":"ctrl+shift+up","win":"alt+shift+up","linux":"alt+shift+up","key":"alt+shift+up","command":"editor.action.insertCursorAbove","when":"editorTextFocus"},{"mac":"ctrl+shift+down","win":"alt+shift+down","linux":"alt+shift+down","key":"alt+shift+down","command":"editor.action.insertCursorBelow","when":"editorTextFocus"},{"mac":"ctrl+shift+pageup","win":"alt+shift+pageup","linux":"alt+shift+pageup","key":"alt+shift+pageup","command":"cursorColumnSelectPageUp","when":"editorTextFocus"},{"mac":"ctrl+shift+pagedown","win":"alt+shift+pagedown","linux":"alt+shift+pagedown","key":"alt+shift+pagedown","command":"cursorColumnSelectPageDown","when":"editorTextFocus"},{"mac":"cmd+shift+l","win":"ctrl+shift+l","linux":"ctrl+shift+l","key":"ctrl+shift+l","command":"editor.action.insertCursorAtEndOfEachLineSelected","when":"editorTextFocus"},{"mac":"cmd+1","win":"alt+1","linux":"alt+1","key":"alt+1","command":"workbench.action.openEditorAtIndex1"},{"mac":"cmd+2","win":"alt+2","linux":"alt+2","key":"alt+2","command":"workbench.action.openEditorAtIndex2"},{"mac":"cmd+3","win":"alt+3","linux":"alt+3","key":"alt+3","command":"workbench.action.openEditorAtIndex3"},{"mac":"cmd+4","win":"alt+4","linux":"alt+4","key":"alt+4","command":"workbench.action.openEditorAtIndex4"},{"mac":"cmd+5","win":"alt+5","linux":"alt+5","key":"alt+5","command":"workbench.action.openEditorAtIndex5"},{"mac":"cmd+6","win":"alt+6","linux":"alt+6","key":"alt+6","command":"workbench.action.openEditorAtIndex6"},{"mac":"cmd+7","win":"alt+7","linux":"alt+7","key":"alt+7","command":"workbench.action.openEditorAtIndex7"},{"mac":"cmd+8","win":"alt+8","linux":"alt+8","key":"alt+8","command":"workbench.action.openEditorAtIndex8"},{"mac":"cmd+9","win":"alt+9","linux":"alt+9","key":"alt+9","command":"workbench.action.openEditorAtIndex9"},{"mac":"cmd+ctrl+g","win":"alt+f3","linux":"alt+f3","key":"alt+f3","command":"editor.action.selectHighlights","when":"editorFocus"},{"mac":"cmd+shift+r","win":"ctrl+shift+r","linux":"ctrl+shift+r","key":"ctrl+shift+r","command":"workbench.action.showAllSymbols"},{"mac":"ctrl+alt+left","win":"alt+left","linux":"ctrl+alt+left","key":"ctrl+alt+left","command":"cursorWordStartLeft","when":"editorTextFocus"},{"mac":"ctrl+alt+right","win":"alt+right","linux":"ctrl+alt+right","key":"ctrl+alt+right","command":"cursorWordEndRight","when":"editorTextFocus"},{"mac":"ctrl+alt+shift+left","win":"alt+shift+left","linux":"ctrl+alt+shift+left","key":"ctrl+alt+shift+left","command":"cursorWordStartLeftSelect","when":"editorTextFocus"},{"mac":"ctrl+alt+shift+right","win":"alt+shift+right","linux":"ctrl+alt+shift+right","key":"ctrl+alt+shift+right","command":"cursorWordEndRightSelect","when":"editorTextFocus"},{"mac":"cmd+j","key":"ctrl+j","command":"editor.action.joinLines","when":"editorTextFocus"},{"mac":"cmd+k cmd+u","key":"ctrl+k ctrl+u","command":"editor.action.transformToUppercase","when":"editorTextFocus"},{"mac":"cmd+k cmd+l","key":"ctrl+k ctrl+l","command":"editor.action.transformToLowercase","when":"editorTextFocus"},{"mac":"cmd+k a","key":"ctrl+k a","command":"workbench.action.showErrorsWarnings"},{"mac":"cmd+k n","key":"ctrl+k n","command":"editor.action.marker.next","when":"editorFocus"},{"mac":"cmd+k p","key":"ctrl+k p","command":"editor.action.marker.prev","when":"editorFocus"},{"mac":"ctrl+1","win":"ctrl+1","linux":"ctrl+1","key":"ctrl+1","command":"workbench.action.focusFirstEditorGroup","when":"editorFocus"},{"mac":"ctrl+2","win":"ctrl+2","linux":"ctrl+2","key":"ctrl+2","command":"workbench.action.focusSecondEditorGroup","when":"editorFocus"},{"mac":"ctrl+3","win":"ctrl+3","linux":"ctrl+3","key":"ctrl+3","command":"workbench.action.focusThirdEditorGroup","when":"editorFocus"},{"mac":"cmd+p","win":"ctrl+p","linux":"ctrl+p","key":"ctrl+p","command":"workbench.action.quickOpenPreviousEditor"},{"mac":"cmd+k cmd+k","win":"ctrl+k ctrl+k","linux":"ctrl+k ctrl+k","command":"deleteAllRight","key":"ctrl+k ctrl+k","when":"editorTextFocus && !editorReadonly"},{"mac":"cmd+shift+space","win":"ctrl+shift+space","linux":"ctrl+shift+space","command":"editor.action.smartSelect.grow","key":"ctrl+shift+space","when":"editorTextFocus"}]},"uuid":"529697b9-b343-4b1c-ba2f-f5ef692132d4","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.sublime-keybindings","identifier":{"value":"ms-vscode.sublime-keybindings","_lower":"ms-vscode.sublime-keybindings"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/ms-vscode.sublime-keybindings-4.0.8","path":"/home/dotnet/.vscode-oss/extensions/ms-vscode.sublime-keybindings-4.0.8","scheme":"file"}},{"name":"color-highlight","displayName":"Color Highlight","description":"Highlight web colors in your editor","version":"2.3.0","publisher":"naumovs","engines":{"vscode":"^1.10.0"},"categories":["Other"],"activationEvents":["*"],"scripts":{"vscode:prepublish":"webpack","dev":"webpack -w","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"license":"MIT","bugs":{"url":"https://github.com/naumovs/vscode-ext-color-highlight/issues"},"homepage":"https://github.com/naumovs/vscode-ext-color-highlight","repository":{"type":"git","url":"https://github.com/naumovs/vscode-ext-color-highlight.git"},"main":"./dist/extension","icon":"images/preview.png","contributes":{"configuration":{"title":"Color Highlight","properties":{"color-highlight.enable":{"default":true,"description":"Controls if plugin is enabled","type":"boolean"},"color-highlight.languages":{"default":["*"],"description":"An array of language ids which should be higlighted by Color Highlight. \"*\" to trigger on any language; Prepend language id with \"!\" to exclude the language (i.e \"!typescript\", \"!javascript\")","type":"array"},"color-highlight.matchWords":{"default":false,"description":"Highlight color words in all files (grey, green, etc.)","type":"boolean"},"color-highlight.markerType":{"default":"background","description":"Style of the highlight. Can be 'dot-before', 'dot-after', 'foreground', 'background', 'outline', 'underline'","type":"string"},"color-highlight.markRuler":{"default":true,"description":"Highlight colors on the ruler (scroll bar), true/false","type":"boolean"},"color-highlight.sass.includePaths":{"default":[],"description":"Array of absolute paths to search while perform file lookups.","type":"array"}}},"commands":[{"command":"extension.colorHighlight","title":"Highlight colors in current file"}]},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","babel-core":"^6.23.0","babel-eslint":"^7.2.1","babel-loader":"^7.0.0-beta.1","babel-plugin-transform-runtime":"^6.23.0","babel-preset-latest":"^6.23.0","eslint":"^3.18.0","mocha":"^2.3.3","vscode":"^1.0.0","webpack":"^2.3.2"},"dependencies":{"color":"^1.0.3","color-name":"^1.1.2","file-importer":"^1.0.0"},"uuid":"121396ad-85a1-45ec-9fd1-d95028a847f5","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"naumovs.color-highlight","identifier":{"value":"naumovs.color-highlight","_lower":"naumovs.color-highlight"},"extensionLocation":{"$mid":1,"fsPath":"/home/dotnet/.vscode-oss/extensions/naumovs.color-highlight-2.3.0","path":"/home/dotnet/.vscode-oss/extensions/naumovs.color-highlight-2.3.0","scheme":"file"}}]}